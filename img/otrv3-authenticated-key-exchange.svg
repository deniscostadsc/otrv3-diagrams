<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="2200" height="1548" xmlns:xlink="http://www.w3.org/1999/xlink"><source><![CDATA[title: OTRv3 - Authenticated Key Exchange (AKE)

Note right of Bob: Picks a random value r (128 bits)
Note right of Bob: Picks a random value x (at least 320 bits)
Bob->Alice: Sends AESr(g^x), HASH(g^x) to Alice

Note right of Alice: Picks a random value y (at least 320 bits)
Alice->Bob: Sends Bob g^y

Note right of Bob: Verifies that Alice's g^y is a legal value (2 <= g^y <= modulus-2)
Note right of Bob: Computes s = (g^y)^x
Note right of Bob: Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways
Note right of Bob: Picks keyid B, a serial number for his D-H key g^x
Note right of Bob: Computes M B = MACm1(g^x, g^y, pubB, keyidB)
Note right of Bob: Computes XB = pubB, keyidB, sigB(MB)
Bob->Alice: Sends Alice r, AESc(XB), MACm2(AESc(XB))

Note right of Alice: Uses r to decrypt the value of g^x sent earlier
Note right of Alice: Verifies that HASH(g^x) matches the value sent earlier
Note right of Alice: Verifies that Bob's g^x is a legal value (2 <= g^x <= modulus-2)
Note right of Alice: Computes s = (g^x)^y (note that this will be the same as the value of s Bob calculated)
Note right of Alice: Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways (the same as Bob)
Note right of Alice: Uses m2 to verify MACm2(AESc(XB))
Note right of Alice: Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB)
Note right of Alice: Computes MB = MACm1(g^x, g^y, pubB, keyidB)
Note right of Alice: Uses pubB to verify sigB(MB)
Note right of Alice: Picks keyidA, a serial number for her D-H key g^y
Note right of Alice: Computes MA = MACm1'(g^y, g^x, pubA, keyidA)
Note right of Alice: Computes XA = pubA, keyidA, sigA(MA)
Alice->Bob: Sends Bob AESc'(XA), MACm2'(AESc'(XA))

Note right of Bob: Uses m2' to verify MACm2'(AESc'(XA))
Note right of Bob: Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA)
Note right of Bob: Computes MA = MACm1'(g^y, g^x, pubA, keyidA)
Note right of Bob: Uses pubA to verify sigA(MA)]]></source><desc>OTRv3 - Authenticated Key Exchange (AKE)</desc><defs><marker viewBox="0 0 5 5" markerWidth="5" markerHeight="5" orient="auto" refX="5" refY="2.5" id="markerArrowBlock"><path d="M 0 0 L 5 2.5 L 0 5 z"></path></marker><marker viewBox="0 0 9.6 16" markerWidth="4" markerHeight="16" orient="auto" refX="9.6" refY="8" id="markerArrowOpen"><path d="M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z"></path></marker></defs><g class="title"><rect x="10" y="10" width="410" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="30" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="15">OTRv3 - Authenticated Key Exchange (AKE)</tspan></text></g><g class="actor"><rect x="10" y="49" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="74" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Bob</tspan></text></g><g class="actor"><rect x="10" y="1489" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="1514" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Bob</tspan></text></g><line x1="35" x2="35" y1="88" y2="1489" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="actor"><rect x="960" y="49" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="970" y="74" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="970">Alice</tspan></text></g><g class="actor"><rect x="960" y="1489" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="970" y="1514" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="970">Alice</tspan></text></g><line x1="995" x2="995" y1="88" y2="1489" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="note"><rect x="55" y="108" width="340" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="128" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks a random value r (128 bits)</tspan></text></g><g class="note"><rect x="55" y="157" width="430" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="177" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks a random value x (at least 320 bits)</tspan></text></g><g class="signal"><text x="340" y="216.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="340">Sends AESr(g^x), HASH(g^x) to Alice</tspan></text><line x1="35" x2="995" y1="225" y2="225" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="1015" y="245" width="430" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="265" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Picks a random value y (at least 320 bits)</tspan></text></g><g class="signal"><text x="450" y="304.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="450">Sends Bob g^y</tspan></text><line x1="995" x2="35" y1="313" y2="313" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="55" y="333" width="670" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="353" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Verifies that Alice's g^y is a legal value (2 &lt;= g^y &lt;= modulus-2)</tspan></text></g><g class="note"><rect x="55" y="382" width="210" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="402" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes s = (g^y)^x</tspan></text></g><g class="note"><rect x="55" y="431" width="920" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="451" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways</tspan></text></g><g class="note"><rect x="55" y="480" width="510" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="500" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks keyid B, a serial number for his D-H key g^x</tspan></text></g><g class="note"><rect x="55" y="529" width="450" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="549" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes M B = MACm1(g^x, g^y, pubB, keyidB)</tspan></text></g><g class="note"><rect x="55" y="578" width="370" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="598" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes XB = pubB, keyidB, sigB(MB)</tspan></text></g><g class="signal"><text x="315" y="637.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="315">Sends Alice r, AESc(XB), MACm2(AESc(XB))</tspan></text><line x1="35" x2="995" y1="646" y2="646" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="1015" y="666" width="480" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="686" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Uses r to decrypt the value of g^x sent earlier</tspan></text></g><g class="note"><rect x="1015" y="715" width="550" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="735" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Verifies that HASH(g^x) matches the value sent earlier</tspan></text></g><g class="note"><rect x="1015" y="764" width="650" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="784" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Verifies that Bob's g^x is a legal value (2 &lt;= g^x &lt;= modulus-2)</tspan></text></g><g class="note"><rect x="1015" y="813" width="880" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="833" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Computes s = (g^x)^y (note that this will be the same as the value of s Bob calculated)</tspan></text></g><g class="note"><rect x="1015" y="862" width="1100" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="882" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways (the same as Bob)</tspan></text></g><g class="note"><rect x="1015" y="911" width="340" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="931" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Uses m2 to verify MACm2(AESc(XB))</tspan></text></g><g class="note"><rect x="1015" y="960" width="650" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="980" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB)</tspan></text></g><g class="note"><rect x="1015" y="1009" width="440" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="1029" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Computes MB = MACm1(g^x, g^y, pubB, keyidB)</tspan></text></g><g class="note"><rect x="1015" y="1058" width="290" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="1078" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Uses pubB to verify sigB(MB)</tspan></text></g><g class="note"><rect x="1015" y="1107" width="500" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="1127" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Picks keyidA, a serial number for her D-H key g^y</tspan></text></g><g class="note"><rect x="1015" y="1156" width="450" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="1176" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Computes MA = MACm1'(g^y, g^x, pubA, keyidA)</tspan></text></g><g class="note"><rect x="1015" y="1205" width="370" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1020" y="1225" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1020">Computes XA = pubA, keyidA, sigA(MA)</tspan></text></g><g class="signal"><text x="325" y="1264.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="325">Sends Bob AESc'(XA), MACm2'(AESc'(XA))</tspan></text><line x1="995" x2="35" y1="1273" y2="1273" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="55" y="1293" width="370" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="1313" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses m2' to verify MACm2'(AESc'(XA))</tspan></text></g><g class="note"><rect x="55" y="1342" width="670" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="1362" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA)</tspan></text></g><g class="note"><rect x="55" y="1391" width="450" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="1411" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes MA = MACm1'(g^y, g^x, pubA, keyidA)</tspan></text></g><g class="note"><rect x="55" y="1440" width="290" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="60" y="1460" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses pubA to verify sigA(MA)</tspan></text></g></svg>