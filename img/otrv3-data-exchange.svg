<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="1370" height="1099" xmlns:xlink="http://www.w3.org/1999/xlink"><source><![CDATA[title: OTRv3 - Data exchange

Note right of Alice: Picks the most recent of her own D-H encryption\nkeys that Bob has acknowledged receiving (by\nusing it in a Data Message, or failing that, in \n the AKE). Let keyA be that key, and let keyidA\nbe its serial number.
Note right of Alice: If the above key is Alice's most recent key,\nshe generates a new D-H key (next_dh), to get\nthe serial number keyidA+1.
Note right of Alice: Picks the most recent of Bob's D-H encryption \n keys that she has received from him (either in a \n Data Message or in the AKE). Let keyB by that \n key, and let keyidB be its serial number.
Note right of Alice: Uses Diffie-Hellman to compute a shared secret \n from the two keys keyA and keyB, and generates \n the sending AES key, ek, and the sending MAC key, \n mk, as detailed below.
Note right of Alice: Collects any old MAC keys that were used in \n previous messages, but will never again be used \n (because their associated D-H keys are no longer \n the most recent ones) into a list, oldmackeys.
Note right of Alice: Picks a value of the counter, ctr, so that the \n triple (keyA, keyB, ctr) is never the same for \n more than one Data Message Alice sends to Bob.
Note right of Alice: Computes TA = (keyidA, keyidB, next_dh, ctr, AES-CTRek,ctr(msg))
Alice->Bob: Sends Bob TA, MACmk(TA), oldmackeys

Note right of Bob: Uses Diffie-Hellman to compute a shared secret \n from the two keys labelled by keyidA and keyidB, \n and generates the receiving AES key, ek, and the \n receiving MAC key, mk, as detailed below. (These \n will be the same as the keys Alice generated, above.)
Note right of Bob: Uses mk to verify MACmk(TA).
Note right of Bob: Uses ek and ctr to decrypt AES-CTRek,ctr(msg).]]></source><desc>OTRv3 - Data exchange</desc><defs><marker viewBox="0 0 5 5" markerWidth="5" markerHeight="5" orient="auto" refX="5" refY="2.5" id="markerArrowBlock"><path d="M 0 0 L 5 2.5 L 0 5 z"></path></marker><marker viewBox="0 0 9.6 16" markerWidth="4" markerHeight="16" orient="auto" refX="9.6" refY="8" id="markerArrowOpen"><path d="M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z"></path></marker></defs><g class="title"><rect x="10" y="10" width="220" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="30" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="15">OTRv3 - Data exchange</tspan></text></g><g class="actor"><rect x="10" y="49" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="74" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Alice</tspan></text></g><g class="actor"><rect x="10" y="1040.2000274658203" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="1065.2000274658203" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Alice</tspan></text></g><line x1="45" x2="45" y1="88" y2="1040.2000274658203" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="actor"><rect x="710" y="49" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="720" y="74" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="720">Bob</tspan></text></g><g class="actor"><rect x="710" y="1040.2000274658203" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="720" y="1065.2000274658203" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="720">Bob</tspan></text></g><line x1="735" x2="735" y1="88" y2="1040.2000274658203" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="note"><rect x="65" y="108" width="480" height="105.80000305175781" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="128" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Picks the most recent of her own D-H encryption</tspan><tspan dy="1.2em" x="70">keys that Bob has acknowledged receiving (by</tspan><tspan dy="1.2em" x="70">using it in a Data Message, or failing that, in</tspan><tspan dy="1.2em" x="70">the AKE). Let keyA be that key, and let keyidA</tspan><tspan dy="1.2em" x="70">be its serial number.</tspan></text></g><g class="note"><rect x="65" y="233.8000030517578" width="460" height="67.4000015258789" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="253.8000030517578" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">If the above key is Alice's most recent key,</tspan><tspan dy="1.2em" x="70">she generates a new D-H key (next_dh), to get</tspan><tspan dy="1.2em" x="70">the serial number keyidA+1.</tspan></text></g><g class="note"><rect x="65" y="321.2000045776367" width="490" height="86.60000610351562" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="341.2000045776367" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Picks the most recent of Bob's D-H encryption</tspan><tspan dy="1.2em" x="70">keys that she has received from him (either in a</tspan><tspan dy="1.2em" x="70">Data Message or in the AKE). Let keyB by that</tspan><tspan dy="1.2em" x="70">key, and let keyidB be its serial number.</tspan></text></g><g class="note"><rect x="65" y="427.80001068115234" width="500" height="86.60000610351562" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="447.80001068115234" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Uses Diffie-Hellman to compute a shared secret</tspan><tspan dy="1.2em" x="70">from the two keys keyA and keyB, and generates</tspan><tspan dy="1.2em" x="70">the sending AES key, ek, and the sending MAC key,</tspan><tspan dy="1.2em" x="70">mk, as detailed below.</tspan></text></g><g class="note"><rect x="65" y="534.400016784668" width="490" height="86.60000610351562" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="554.400016784668" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Collects any old MAC keys that were used in</tspan><tspan dy="1.2em" x="70">previous messages, but will never again be used</tspan><tspan dy="1.2em" x="70">(because their associated D-H keys are no longer</tspan><tspan dy="1.2em" x="70">the most recent ones) into a list, oldmackeys.</tspan></text></g><g class="note"><rect x="65" y="641.0000228881836" width="470" height="67.4000015258789" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="661.0000228881836" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Picks a value of the counter, ctr, so that the</tspan><tspan dy="1.2em" x="70">triple (keyA, keyB, ctr) is never the same for</tspan><tspan dy="1.2em" x="70">more than one Data Message Alice sends to Bob.</tspan></text></g><g class="note"><rect x="65" y="728.4000244140625" width="650" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="70" y="748.4000244140625" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="70">Computes TA = (keyidA, keyidB, next_dh, ctr, AES-CTRek,ctr(msg))</tspan></text></g><g class="signal"><text x="215" y="787.9000244140625" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="215">Sends Bob TA, MACmk(TA), oldmackeys</tspan></text><line x1="45" x2="735" y1="796.4000244140625" y2="796.4000244140625" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="755" y="816.4000244140625" width="540" height="105.80000305175781" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="760" y="836.4000244140625" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="760">Uses Diffie-Hellman to compute a shared secret</tspan><tspan dy="1.2em" x="760">from the two keys labelled by keyidA and keyidB,</tspan><tspan dy="1.2em" x="760">and generates the receiving AES key, ek, and the</tspan><tspan dy="1.2em" x="760">receiving MAC key, mk, as detailed below. (These</tspan><tspan dy="1.2em" x="760">will be the same as the keys Alice generated, above.)</tspan></text></g><g class="note"><rect x="755" y="942.2000274658203" width="290" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="760" y="962.2000274658203" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="760">Uses mk to verify MACmk(TA).</tspan></text></g><g class="note"><rect x="755" y="991.2000274658203" width="470" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="760" y="1011.2000274658203" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="760">Uses ek and ctr to decrypt AES-CTRek,ctr(msg).</tspan></text></g></svg>