<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="2180" height="1269" xmlns:xlink="http://www.w3.org/1999/xlink"><source><![CDATA[Bob->Bob: Picks a random value r (128 bits)
Bob->Bob: Picks a random value x (at least 320 bits)
Bob->Alice: Sends AESr(g^x), HASH(g^x) to Alice

Alice->Alice: Picks a random value y (at least 320 bits)
Alice->Bob: Sends Bob g^y

Bob->Bob: Verifies that Alice's g^y is a legal value (2 <= g^y <= modulus-2)
Bob->Bob: Computes s = (g^y)^x
Bob->Bob: Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways
Bob->Bob: Picks keyid B, a serial number for his D-H key g^x
Bob->Bob: Computes M B = MACm1(g^x, g^y, pubB, keyidB)
Bob->Bob: Computes XB = pubB, keyidB, sigB(MB)
Bob->Alice: Sends Alice r, AESc(XB), MACm2(AESc(XB))

Alice->Alice: Uses r to decrypt the value of g^x sent earlier
Alice->Alice: Verifies that HASH(g^x) matches the value sent earlier
Alice->Alice: Verifies that Bob's g^x is a legal value (2 <= g^x <= modulus-2)
Alice->Alice: Computes s = (g^x)^y (note that this will be the same as the value of s Bob calculated)
Alice->Alice: Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways (the same as Bob)
Alice->Alice: Uses m2 to verify MACm2(AESc(XB))
Alice->Alice: Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB)
Alice->Alice: Computes MB = MACm1(g^x, g^y, pubB, keyidB)
Alice->Alice: Uses pubB to verify sigB(MB)
Alice->Alice: Picks keyidA, a serial number for her D-H key g^y
Alice->Alice: Computes MA = MACm1'(g^y, g^x, pubA, keyidA)
Alice->Alice: Computes XA = pubA, keyidA, sigA(MA)
Alice->Bob: Sends Bob AESc'(XA), MACm2'(AESc'(XA))

Bob->Bob: Uses m2' to verify MACm2'(AESc'(XA))
Bob->Bob: Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA)
Bob->Bob: Computes MA = MACm1'(g^y, g^x, pubA, keyidA)
Bob->Bob: Uses pubA to verify sigA(MA)]]></source><desc></desc><defs><marker viewBox="0 0 5 5" markerWidth="5" markerHeight="5" orient="auto" refX="5" refY="2.5" id="markerArrowBlock"><path d="M 0 0 L 5 2.5 L 0 5 z"></path></marker><marker viewBox="0 0 9.6 16" markerWidth="4" markerHeight="16" orient="auto" refX="9.6" refY="8" id="markerArrowOpen"><path d="M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z"></path></marker></defs><g class="title"></g><g class="actor"><rect x="10" y="20" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="45" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Bob</tspan></text></g><g class="actor"><rect x="10" y="1210" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="20" y="1235" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="20">Bob</tspan></text></g><line x1="35" x2="35" y1="59" y2="1210" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="actor"><rect x="950" y="20" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="960" y="45" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="960">Alice</tspan></text></g><g class="actor"><rect x="950" y="1210" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="960" y="1235" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="960">Alice</tspan></text></g><line x1="985" x2="985" y1="59" y2="1210" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="signal"><text x="60" y="93.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks a random value r (128 bits)</tspan></text><line x1="35" x2="55" y1="79" y2="79" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="79" y2="103" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="103" y2="103" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="132.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks a random value x (at least 320 bits)</tspan></text><line x1="35" x2="55" y1="118" y2="118" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="118" y2="142" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="142" y2="142" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="335" y="167.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="335">Sends AESr(g^x), HASH(g^x) to Alice</tspan></text><line x1="35" x2="985" y1="176" y2="176" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="210.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Picks a random value y (at least 320 bits)</tspan></text><line x1="985" x2="1005" y1="196" y2="196" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="196" y2="220" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="220" y2="220" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="445" y="245.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="445">Sends Bob g^y</tspan></text><line x1="985" x2="35" y1="254" y2="254" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="288.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Verifies that Alice's g^y is a legal value (2 &lt;= g^y &lt;= modulus-2)</tspan></text><line x1="35" x2="55" y1="274" y2="274" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="274" y2="298" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="298" y2="298" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="327.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes s = (g^y)^x</tspan></text><line x1="35" x2="55" y1="313" y2="313" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="313" y2="337" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="337" y2="337" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="366.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways</tspan></text><line x1="35" x2="55" y1="352" y2="352" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="352" y2="376" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="376" y2="376" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="405.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Picks keyid B, a serial number for his D-H key g^x</tspan></text><line x1="35" x2="55" y1="391" y2="391" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="391" y2="415" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="415" y2="415" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="444.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes M B = MACm1(g^x, g^y, pubB, keyidB)</tspan></text><line x1="35" x2="55" y1="430" y2="430" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="430" y2="454" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="454" y2="454" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="483.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes XB = pubB, keyidB, sigB(MB)</tspan></text><line x1="35" x2="55" y1="469" y2="469" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="469" y2="493" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="493" y2="493" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="310" y="518.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="310">Sends Alice r, AESc(XB), MACm2(AESc(XB))</tspan></text><line x1="35" x2="985" y1="527" y2="527" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="561.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Uses r to decrypt the value of g^x sent earlier</tspan></text><line x1="985" x2="1005" y1="547" y2="547" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="547" y2="571" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="571" y2="571" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="600.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Verifies that HASH(g^x) matches the value sent earlier</tspan></text><line x1="985" x2="1005" y1="586" y2="586" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="586" y2="610" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="610" y2="610" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="639.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Verifies that Bob's g^x is a legal value (2 &lt;= g^x &lt;= modulus-2)</tspan></text><line x1="985" x2="1005" y1="625" y2="625" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="625" y2="649" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="649" y2="649" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="678.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Computes s = (g^x)^y (note that this will be the same as the value of s Bob calculated)</tspan></text><line x1="985" x2="1005" y1="664" y2="664" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="664" y2="688" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="688" y2="688" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="717.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways (the same as Bob)</tspan></text><line x1="985" x2="1005" y1="703" y2="703" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="703" y2="727" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="727" y2="727" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="756.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Uses m2 to verify MACm2(AESc(XB))</tspan></text><line x1="985" x2="1005" y1="742" y2="742" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="742" y2="766" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="766" y2="766" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="795.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB)</tspan></text><line x1="985" x2="1005" y1="781" y2="781" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="781" y2="805" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="805" y2="805" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="834.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Computes MB = MACm1(g^x, g^y, pubB, keyidB)</tspan></text><line x1="985" x2="1005" y1="820" y2="820" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="820" y2="844" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="844" y2="844" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="873.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Uses pubB to verify sigB(MB)</tspan></text><line x1="985" x2="1005" y1="859" y2="859" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="859" y2="883" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="883" y2="883" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="912.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Picks keyidA, a serial number for her D-H key g^y</tspan></text><line x1="985" x2="1005" y1="898" y2="898" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="898" y2="922" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="922" y2="922" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="951.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Computes MA = MACm1'(g^y, g^x, pubA, keyidA)</tspan></text><line x1="985" x2="1005" y1="937" y2="937" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="937" y2="961" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="961" y2="961" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1010" y="990.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="1010">Computes XA = pubA, keyidA, sigA(MA)</tspan></text><line x1="985" x2="1005" y1="976" y2="976" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="1005" y1="976" y2="1000" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1005" x2="985" y1="1000" y2="1000" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="320" y="1025.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="320">Sends Bob AESc'(XA), MACm2'(AESc'(XA))</tspan></text><line x1="985" x2="35" y1="1034" y2="1034" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="1068.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses m2' to verify MACm2'(AESc'(XA))</tspan></text><line x1="35" x2="55" y1="1054" y2="1054" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="1054" y2="1078" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="1078" y2="1078" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="1107.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA)</tspan></text><line x1="35" x2="55" y1="1093" y2="1093" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="1093" y2="1117" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="1117" y2="1117" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="1146.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Computes MA = MACm1'(g^y, g^x, pubA, keyidA)</tspan></text><line x1="35" x2="55" y1="1132" y2="1132" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="1132" y2="1156" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="1156" y2="1156" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="60" y="1185.5" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="60">Uses pubA to verify sigA(MA)</tspan></text><line x1="35" x2="55" y1="1171" y2="1171" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="55" y1="1171" y2="1195" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="55" x2="35" y1="1195" y2="1195" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g></svg>